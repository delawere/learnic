[{"/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/models/translate.ts":"1","/Users/zhiganov/Documents/Projects/memorize_words/src/App.tsx":"2","/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/models/words.ts":"3","/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/rootReducer.ts":"4","/Users/zhiganov/Documents/Projects/memorize_words/src/components/pages/Home/index.tsx":"5","/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/models/user.ts":"6","/Users/zhiganov/Documents/Projects/memorize_words/src/components/organisms/WordsForToday/utils/getUniqNumbers.ts":"7","/Users/zhiganov/Documents/Projects/memorize_words/src/components/molecules/WordsList/Search/index.tsx":"8","/Users/zhiganov/Documents/Projects/memorize_words/src/components/organisms/WordsForToday/utils/isArrayUnique.ts":"9","/Users/zhiganov/Documents/Projects/memorize_words/src/components/molecules/VideosList/VideoItem/index.tsx":"10","/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/api/words.ts":"11","/Users/zhiganov/Documents/Projects/memorize_words/src/components/organisms/WordsForToday/Trainings/index.tsx":"12","/Users/zhiganov/Documents/Projects/memorize_words/src/components/molecules/WordsList/index.tsx":"13","/Users/zhiganov/Documents/Projects/memorize_words/src/components/organisms/Cards/index.tsx":"14","/Users/zhiganov/Documents/Projects/memorize_words/src/utils/hooks/useSelector.js":"15","/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/index.ts":"16","/Users/zhiganov/Documents/Projects/memorize_words/src/components/molecules/WordsList/NewWord/index.tsx":"17","/Users/zhiganov/Documents/Projects/memorize_words/src/components/molecules/WordsList/NoWord/index.tsx":"18"},{"size":1054,"mtime":1611601098491,"results":"19","hashOfConfig":"20"},{"size":1163,"mtime":1611604065190,"results":"21","hashOfConfig":"20"},{"size":1545,"mtime":1611686416497,"results":"22","hashOfConfig":"20"},{"size":512,"mtime":1611679279163,"results":"23","hashOfConfig":"20"},{"size":1625,"mtime":1611685191636,"results":"24","hashOfConfig":"20"},{"size":1478,"mtime":1610869719784,"results":"25","hashOfConfig":"20"},{"size":536,"mtime":1611247121936,"results":"26","hashOfConfig":"20"},{"size":551,"mtime":1609172451037,"results":"27","hashOfConfig":"20"},{"size":137,"mtime":1610093251739,"results":"28","hashOfConfig":"20"},{"size":2388,"mtime":1608657600102,"results":"29","hashOfConfig":"20"},{"size":1283,"mtime":1611686324615,"results":"30","hashOfConfig":"20"},{"size":680,"mtime":1611606742499,"results":"31","hashOfConfig":"20"},{"size":5552,"mtime":1611686548108,"results":"32","hashOfConfig":"20"},{"size":2344,"mtime":1611686518144,"results":"33","hashOfConfig":"20"},{"size":381,"mtime":1611682257320,"results":"34","hashOfConfig":"20"},{"size":603,"mtime":1606763381241,"results":"35","hashOfConfig":"20"},{"size":3590,"mtime":1611686567748,"results":"36","hashOfConfig":"20"},{"size":2560,"mtime":1611686613725,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lqx8iq",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/models/translate.ts",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/App.tsx",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/models/words.ts",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/rootReducer.ts",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/components/pages/Home/index.tsx",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/models/user.ts",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/components/organisms/WordsForToday/utils/getUniqNumbers.ts",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/components/molecules/WordsList/Search/index.tsx",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/components/organisms/WordsForToday/utils/isArrayUnique.ts",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/components/molecules/VideosList/VideoItem/index.tsx",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/api/words.ts",["75","76","77"],"import firebase from 'firebase';\nimport { firestore } from '../../../database';\n\nconst getWords = async (uid: string): Promise<any[]> => {\n  const result: any[] = [];\n  const request = firestore.collection('users').doc(uid).collection('words');\n  const response = await request.get();\n\n  const mergeToResult = (\n    doc: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n  ) => result.push({ id: doc.id, ...doc.data() });\n\n  response.forEach(mergeToResult);\n\n  return result.map(({ date = null, repeat = null, ...other }) => ({\n    ...other,\n    date: date ? date.toDate().toString() : null,\n    repeat: repeat ? repeat.toDate().toString() : null,\n  }));\n};\n\nconst deleteWord = async ({\n  uid,\n  wordId,\n}: {\n  uid: string;\n  wordId: string;\n}): Promise<void> => {\n  await firestore\n    .collection('users')\n    .doc(uid)\n    .collection('words')\n    .doc(wordId)\n    .delete();\n};\n\nconst addNewWord = async ({\n  uid,\n  word,\n  translate,\n}: {\n  uid: string;\n  word: string;\n  translate: string;\n}): Promise<void> => {\n  const request = firestore.collection('users').doc(uid).collection('words');\n\n  await request.add({\n    word,\n    translate,\n    step: 0,\n    date: new Date(),\n    repeat: new Date(),\n  });\n};\n\nexport { getWords, deleteWord, addNewWord };\n","/Users/zhiganov/Documents/Projects/memorize_words/src/components/organisms/WordsForToday/Trainings/index.tsx",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/components/molecules/WordsList/index.tsx",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/components/organisms/Cards/index.tsx",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/utils/hooks/useSelector.js",["78","79","80"],"/Users/zhiganov/Documents/Projects/memorize_words/src/core/store/index.ts",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/components/molecules/WordsList/NewWord/index.tsx",[],"/Users/zhiganov/Documents/Projects/memorize_words/src/components/molecules/WordsList/NoWord/index.tsx",[],{"ruleId":"81","severity":1,"message":"82","line":4,"column":47,"nodeType":"83","messageId":"84","endLine":4,"endColumn":50,"suggestions":"85"},{"ruleId":"81","severity":1,"message":"82","line":5,"column":17,"nodeType":"83","messageId":"84","endLine":5,"endColumn":20,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":37,"column":7,"nodeType":"89","messageId":"90","endLine":37,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":3,"column":21,"nodeType":"93","messageId":"94","endLine":3,"endColumn":30},{"ruleId":"91","severity":1,"message":"95","line":3,"column":22,"nodeType":"89","messageId":"96","endLine":3,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":7,"column":3,"nodeType":"99","messageId":"100","endLine":7,"endColumn":14},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["101","102"],["103","104"],"@typescript-eslint/no-unused-vars","'addNewWord' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'path' should be typed.","missingArgType","no-console","Unexpected console statement.","MemberExpression","unexpected",{"messageId":"105","fix":"106","desc":"107"},{"messageId":"108","fix":"109","desc":"110"},{"messageId":"105","fix":"111","desc":"107"},{"messageId":"108","fix":"112","desc":"110"},"suggestUnknown",{"range":"113","text":"114"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"113","text":"115"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"116","text":"114"},{"range":"116","text":"115"},[127,130],"unknown","never",[155,158]]